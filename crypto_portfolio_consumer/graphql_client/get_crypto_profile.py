# Generated by ariadne-codegen
# Source: ./gql/query.gql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import TradingType


class GetCryptoProfile(BaseModel):
    get_crypto_profiles: List["GetCryptoProfileGetCryptoProfiles"] = Field(
        alias="getCryptoProfiles"
    )


class GetCryptoProfileGetCryptoProfiles(BaseModel):
    profile_id: Optional[str] = Field(alias="profileId")
    trading_type: Optional[TradingType] = Field(alias="tradingType")
    exchanges: Optional[str]
    estimated_balance: float = Field(alias="estimatedBalance")
    balances: Optional[List["GetCryptoProfileGetCryptoProfilesBalances"]]


class GetCryptoProfileGetCryptoProfilesBalances(BaseModel):
    balance: float
    asset_info: "GetCryptoProfileGetCryptoProfilesBalancesAssetInfo" = Field(
        alias="assetInfo"
    )


class GetCryptoProfileGetCryptoProfilesBalancesAssetInfo(BaseModel):
    symbol: Optional[str]
    logo: Optional[str]
    last_price: float = Field(alias="lastPrice")


GetCryptoProfile.model_rebuild()
GetCryptoProfileGetCryptoProfiles.model_rebuild()
GetCryptoProfileGetCryptoProfilesBalances.model_rebuild()
